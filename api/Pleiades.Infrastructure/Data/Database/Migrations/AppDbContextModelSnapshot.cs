// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pleiades.Infrastructure.Data.Database;

#nullable disable

namespace Pleiades.Infrastructure.Data.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MissionMission", b =>
                {
                    b.Property<Guid>("MissionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PrerequisiteMissionsId")
                        .HasColumnType("uuid");

                    b.HasKey("MissionId", "PrerequisiteMissionsId");

                    b.HasIndex("PrerequisiteMissionsId");

                    b.ToTable("MissionPrerequisites", (string)null);
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ExpeditionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ExpeditionId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Expedition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("MissionModuleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VideoPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("MissionModuleId");

                    b.ToTable("Expeditions");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Join.UserMission", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MissionId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "MissionId");

                    b.HasIndex("MissionId");

                    b.ToTable("UserMission");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Mission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("MoonId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("PlanetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("MoonId")
                        .IsUnique();

                    b.HasIndex("PlanetId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.MissionModule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("MissionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("MissionId");

                    b.ToTable("MissionModules");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Moon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Lore")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("PlanetId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PlanetId");

                    b.ToTable("Moons");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Planet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Lore")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("SolarSystemId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SolarSystemId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.SolarSystem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("SolarSystems");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MissionMission", b =>
                {
                    b.HasOne("Pleiades.Domain.Entities.Mission", null)
                        .WithMany()
                        .HasForeignKey("MissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pleiades.Domain.Entities.Mission", null)
                        .WithMany()
                        .HasForeignKey("PrerequisiteMissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Pleiades.Domain.Entities.Expedition", "Expedition")
                        .WithMany("Comments")
                        .HasForeignKey("ExpeditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pleiades.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Expedition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Expedition", b =>
                {
                    b.HasOne("Pleiades.Domain.Entities.MissionModule", "MissionModule")
                        .WithMany("Expeditions")
                        .HasForeignKey("MissionModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MissionModule");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Join.UserMission", b =>
                {
                    b.HasOne("Pleiades.Domain.Entities.Mission", "Mission")
                        .WithMany("UserMissions")
                        .HasForeignKey("MissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Pleiades.Domain.Entities.User", "User")
                        .WithMany("UserMissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Mission", b =>
                {
                    b.HasOne("Pleiades.Domain.Entities.Moon", "Moon")
                        .WithOne("Mission")
                        .HasForeignKey("Pleiades.Domain.Entities.Mission", "MoonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Pleiades.Domain.Entities.Planet", "Planet")
                        .WithMany()
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Pleiades.Domain.VOs.MissionDetail", "Detail", b1 =>
                        {
                            b1.Property<Guid>("MissionId")
                                .HasColumnType("uuid");

                            b1.Property<int>("AreaCategory")
                                .HasColumnType("integer");

                            b1.Property<int>("Difficulty")
                                .HasColumnType("integer");

                            b1.Property<int>("ExpeditionsNumber")
                                .HasColumnType("integer");

                            b1.Property<int>("ExplorationTimeInMinutes")
                                .HasColumnType("integer");

                            b1.Property<string>("Lore")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("character varying(1000)");

                            b1.HasKey("MissionId");

                            b1.ToTable("Missions");

                            b1.WithOwner()
                                .HasForeignKey("MissionId");
                        });

                    b.Navigation("Detail")
                        .IsRequired();

                    b.Navigation("Moon");

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.MissionModule", b =>
                {
                    b.HasOne("Pleiades.Domain.Entities.Mission", null)
                        .WithMany("MissionModules")
                        .HasForeignKey("MissionId");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Moon", b =>
                {
                    b.HasOne("Pleiades.Domain.Entities.Planet", "Planet")
                        .WithMany("Moons")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Pleiades.Domain.VOs.Appearance", "Appearance", b1 =>
                        {
                            b1.Property<Guid>("MoonId")
                                .HasColumnType("uuid");

                            b1.Property<string>("BannerPath")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)");

                            b1.Property<string>("IconPath")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)");

                            b1.HasKey("MoonId");

                            b1.ToTable("Moons");

                            b1.WithOwner()
                                .HasForeignKey("MoonId");

                            b1.OwnsOne("ColorPalette", "ColorPalette", b2 =>
                                {
                                    b2.Property<Guid>("AppearanceMoonId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("PrimaryColorHex")
                                        .IsRequired()
                                        .HasMaxLength(7)
                                        .HasColumnType("character varying(7)");

                                    b2.Property<string>("SecondaryColorHex")
                                        .IsRequired()
                                        .HasMaxLength(7)
                                        .HasColumnType("character varying(7)");

                                    b2.HasKey("AppearanceMoonId");

                                    b2.ToTable("Moons");

                                    b2.WithOwner()
                                        .HasForeignKey("AppearanceMoonId");

                                    b2.OwnsOne("Pleiades.Domain.VOs.Gradient", "Gradient", b3 =>
                                        {
                                            b3.Property<Guid>("ColorPaletteAppearanceMoonId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("EndHex")
                                                .IsRequired()
                                                .HasMaxLength(7)
                                                .HasColumnType("character varying(7)");

                                            b3.Property<string>("MiddleHex")
                                                .IsRequired()
                                                .HasMaxLength(7)
                                                .HasColumnType("character varying(7)");

                                            b3.Property<string>("StartHex")
                                                .IsRequired()
                                                .HasMaxLength(7)
                                                .HasColumnType("character varying(7)");

                                            b3.HasKey("ColorPaletteAppearanceMoonId");

                                            b3.ToTable("Moons");

                                            b3.WithOwner()
                                                .HasForeignKey("ColorPaletteAppearanceMoonId");
                                        });

                                    b2.Navigation("Gradient")
                                        .IsRequired();
                                });

                            b1.Navigation("ColorPalette")
                                .IsRequired();
                        });

                    b.Navigation("Appearance")
                        .IsRequired();

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Planet", b =>
                {
                    b.HasOne("Pleiades.Domain.Entities.SolarSystem", "SolarSystem")
                        .WithMany("Planets")
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Pleiades.Domain.VOs.Appearance", "Appearance", b1 =>
                        {
                            b1.Property<Guid>("PlanetId")
                                .HasColumnType("uuid");

                            b1.Property<string>("BannerPath")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)");

                            b1.Property<string>("IconPath")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)");

                            b1.HasKey("PlanetId");

                            b1.ToTable("Planets");

                            b1.WithOwner()
                                .HasForeignKey("PlanetId");

                            b1.OwnsOne("ColorPalette", "ColorPalette", b2 =>
                                {
                                    b2.Property<Guid>("AppearancePlanetId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("PrimaryColorHex")
                                        .IsRequired()
                                        .HasMaxLength(7)
                                        .HasColumnType("character varying(7)");

                                    b2.Property<string>("SecondaryColorHex")
                                        .IsRequired()
                                        .HasMaxLength(7)
                                        .HasColumnType("character varying(7)");

                                    b2.HasKey("AppearancePlanetId");

                                    b2.ToTable("Planets");

                                    b2.WithOwner()
                                        .HasForeignKey("AppearancePlanetId");

                                    b2.OwnsOne("Pleiades.Domain.VOs.Gradient", "Gradient", b3 =>
                                        {
                                            b3.Property<Guid>("ColorPaletteAppearancePlanetId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("EndHex")
                                                .IsRequired()
                                                .HasMaxLength(7)
                                                .HasColumnType("character varying(7)");

                                            b3.Property<string>("MiddleHex")
                                                .IsRequired()
                                                .HasMaxLength(7)
                                                .HasColumnType("character varying(7)");

                                            b3.Property<string>("StartHex")
                                                .IsRequired()
                                                .HasMaxLength(7)
                                                .HasColumnType("character varying(7)");

                                            b3.HasKey("ColorPaletteAppearancePlanetId");

                                            b3.ToTable("Planets");

                                            b3.WithOwner()
                                                .HasForeignKey("ColorPaletteAppearancePlanetId");
                                        });

                                    b2.Navigation("Gradient")
                                        .IsRequired();
                                });

                            b1.Navigation("ColorPalette")
                                .IsRequired();
                        });

                    b.Navigation("Appearance")
                        .IsRequired();

                    b.Navigation("SolarSystem");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.User", b =>
                {
                    b.OwnsOne("Pleiades.Domain.VOs.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Pleiades.Domain.VOs.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("character varying(255)")
                                .HasColumnName("PasswordHash");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Expedition", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Mission", b =>
                {
                    b.Navigation("MissionModules");

                    b.Navigation("UserMissions");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.MissionModule", b =>
                {
                    b.Navigation("Expeditions");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Moon", b =>
                {
                    b.Navigation("Mission");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.Planet", b =>
                {
                    b.Navigation("Moons");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.SolarSystem", b =>
                {
                    b.Navigation("Planets");
                });

            modelBuilder.Entity("Pleiades.Domain.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("UserMissions");
                });
#pragma warning restore 612, 618
        }
    }
}
